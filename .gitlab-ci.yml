stages:
  - build
  - verify_build
  - publish

build image:
  stage: build
  tags:
    - kubernetes
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        DESTINATION: $CI_REGISTRY_IMAGE:latest
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DESTINATION: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push"'
      variables:
        DESTINATION: $CI_REGISTRY_IMAGE/review:$CI_COMMIT_REF_SLUG
  script:
    - echo "Building image to" $DESTINATION
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $DESTINATION 

verify image:
  stage: verify_build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        DOCKER_IMAGE: $CI_REGISTRY_IMAGE:latest
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push"'
      variables:
        DOCKER_IMAGE: $CI_REGISTRY_IMAGE/review:$CI_COMMIT_REF_SLUG
  image: $DOCKER_IMAGE
  tags:
    - kubernetes
  script:
    - echo "Using Docker image" $DOCKER_IMAGE
    - pg_dump --version
    - tar --version
    - gsutil version

publish_to_docker:
  stage: publish
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        DOCKER_TAG: latest
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DOCKER_TAG: $CI_COMMIT_TAG
  services:
    - docker:dind
  tags:
    - docker
  allow_failure: true
  before_script:
    - echo "$DOCKER_TOKEN" | docker login --username $DOCKER_USER --password-stdin
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
  script:
    - docker pull $CI_REGISTRY_IMAGE:$DOCKER_TAG
    - docker tag $CI_REGISTRY_IMAGE:$DOCKER_TAG askanna/backup-helper:$DOCKER_TAG
    - docker push askanna/backup-helper:$DOCKER_TAG
  after_script:
    - docker logout

publish_to_public_repos:
  stage: publish
  tags:
    - kubernetes
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "trigger")
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        TARGET: HEAD:main
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        TARGET: refs/tags/$CI_COMMIT_TAG
  before_script:
    - apt-get update -y && apt-get install openssh-client git curl -y
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_GITLAB_COM" | tr -d '\r' | ssh-add - > /dev/null
    - echo "${SSH_PRIVATE_KEY_GITHUB_COM}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "hello@askanna.io"
    - git config --global user.name "AskAnna Robot"
  script:
    - git remote add gitlab git@gitlab.com:askanna/backup-helper.git
    - git remote add github git@github.com:askanna-io/backup-helper.git
    - git push gitlab $TARGET
    - git push github $TARGET
